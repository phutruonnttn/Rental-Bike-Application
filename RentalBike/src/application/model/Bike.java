package application.model;
// Generated Dec 4, 2021, 8:58:47 PM by Hibernate Tools 3.5.0.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

import application.calculateFee.Interface.ICalculateRentBikeFeeModel;

/**
 * Bike generated by hbm2java
 */
@Entity
@Table(name = "bike", schema = "public", uniqueConstraints = @UniqueConstraint(columnNames = "license_plate"))
public class Bike implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	@Id

	@Column(name = "bike_code", unique = true, nullable = false)
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	private int bikeCode;

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "station_code")
	private Station station;
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "category_code")
	private Category category;

	@Column(name = "bike_name", nullable = false)
	private String bikeName;

	@Column(name = "weight")
	private Integer weight;

	@Column(name = "producer")
	private String producer;

	@Column(name = "cost")
	private Integer cost;

	@Column(name = "license_plate", unique = true, nullable = false)
	private String licensePlate;

	@Temporal(TemporalType.DATE)
	@Column(name = "manuafacture_date", length = 13)
	private Date manuafactureDate;
	
	@Column(name = "renting_status")
	private Boolean rentingStatus;

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "bike")
	private Set<Bill> bills = new HashSet<Bill>(0);

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "bike")
	private EBike EBike;
	

	public Bike() {
	}

	public Bike(Station station, Category category, String bikeName, Integer weight, String producer,
			Integer cost, String licensePlate, Date manuafactureDate) {
		this.station = station;
		this.category = category;
		this.bikeName = bikeName;
		this.weight = weight;
		this.producer = producer;
		this.cost = cost;
		this.licensePlate = licensePlate;
		this.manuafactureDate = manuafactureDate;
	}

	public int getBikeCode() {
		return this.bikeCode;
	}

	public void setBikeCode(int bikeCode) {
		this.bikeCode = bikeCode;
	}

	public Station getStation() {
		return this.station;
	}

	public void setStation(Station station) {
		this.station = station;
	}

	public Category getCategory() {
		return this.category;
	}

	public void setCategory(Category category) {
		this.category = category;
	}

	public String getBikeName() {
		return this.bikeName;
	}

	public void setBikeName(String bikeName) {
		this.bikeName = bikeName;
	}

	public Integer getWeight() {
		return this.weight;
	}

	public void setWeight(Integer weight) {
		this.weight = weight;
	}

	public String getProducer() {
		return this.producer;
	}

	public void setProducer(String producer) {
		this.producer = producer;
	}

	public Integer getCost() {
		return this.cost;
	}

	public void setCost(Integer cost) {
		this.cost = cost;
	}

	public String getLicensePlate() {
		return this.licensePlate;
	}

	public void setLicensePlate(String licensePlate) {
		this.licensePlate = licensePlate;
	}

	public Date getManuafactureDate() {
		return this.manuafactureDate;
	}

	public void setManuafactureDate(Date manuafactureDate) {
		this.manuafactureDate = manuafactureDate;
	}

	public Set<Bill> getBills() {
		return this.bills;
	}

	public void setBills(Set<Bill> bills) {
		this.bills = bills;
	}

	public EBike getEBike() {
		return this.EBike;
	}

	public void setEBike(EBike EBike) {
		this.EBike = EBike;
	}

	public Boolean getRentingStatus() {
		return rentingStatus;
	}

	public void setRentingStatus(Boolean rentingStatus) {
		this.rentingStatus = rentingStatus;
	}
	
	public int getFirstTransactionAmount(ICalculateRentBikeFeeModel calculateFeeModel) {
		//return (int) (this.getCategory().getDepositFee() + this.getCategory().getBaseFee()*this.getCategory().getCoefficient());
		try {
			return calculateFeeModel.calculateFirstTransactionAmount();
		}
		catch (Exception e) {
			e.printStackTrace();
			return -1;
		}
	}
	
	public int getInitFee(ICalculateRentBikeFeeModel calculateFeeModel) {
		//return (int) (this.getCategory().getBaseFee()*this.getCategory().getCoefficient());
		try {
			return calculateFeeModel.calculateInitFee();
		}
		catch (Exception e) {
			e.printStackTrace();
			return -1;
		}
	}

}
